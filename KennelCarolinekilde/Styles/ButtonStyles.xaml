<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">
    
    <!-- Menu Button: using RadioButton insted of normal Button because it should stay activatet until another Button is clicked-->
    <Style x:Key="menuButton" TargetType="RadioButton">
        
        <!--Button Size-->
        <Setter Property="Height" Value="50" />        
        <!--Margin of negative value to use for the hover/selection effect-->
        <Setter Property="Margin" Value="-5,0,0,5" />        
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource plainTextColor1}" />
        <Setter Property="BorderBrush" Value="Transparent" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="4,0,0,0"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!--Mouse Hover Style-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0,0,0,5" />
                <Setter Property="Background" Value="{StaticResource panelOverColor}" />
                <Setter Property="Foreground" Value="{StaticResource titleColor3}" />
                <!--Bind to the tag propperty of the button use RelativeSource to let it point to it self-->
                <!--The tag property is of type object-->
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>

            <!--Active Style-->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Margin" Value="0,0,0,5" />
                <Setter Property="Background" Value="{StaticResource panelActiveColor}" />
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Menu button Icon to get icons download fontawesome.sharp NuGet-->
    <Style x:Key="menuButtonIcon" TargetType="fa:IconImage">
        <!--we bind to the color there is stored in the tag property of the button so we need to specifi it is from the RadioButton Ancestor-->
        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="22"/>
        <!--Space between the icon and the text-->
        <Setter Property="Margin" Value="35,0,20,0"/>
    </Style>
        
    <!--Menu button text-->
    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <!--we bind to the foreground property like we did above with the tag property-->
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="FontFamily" Value="segoe ui"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!--Control bar button-->
    <Style x:Key="controlButton" TargetType="Button">
        <!--Normal button style-->
        <Setter Property="Width" Value="35" />       
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource plainTextColor3}" />
        <Setter Property="BorderBrush" Value="Transparent" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!--Mouse Hover Style-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource panelActiveColor}" />
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />               
            </Trigger>            
        </Style.Triggers>
    </Style>

    <!--Control bar button Icon-->
    <Style x:Key="controlButtonIcon" TargetType="fa:IconImage">
        <!--we bind to the color there is stored in the foreground property of the button so we need to specifi it is from the RadioButton Ancestor-->
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="9"/>
        <Setter Property="Height" Value="9"/>
    </Style>

</ResourceDictionary>